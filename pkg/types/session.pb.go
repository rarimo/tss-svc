// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: session.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StepType int32

const (
	StepType_Proposing StepType = 0
	StepType_Accepting StepType = 1
	StepType_Signing   StepType = 2
	StepType_Resharing StepType = 3
	StepType_Finishing StepType = 4
	StepType_Other     StepType = 5
)

var StepType_name = map[int32]string{
	0: "Proposing",
	1: "Accepting",
	2: "Signing",
	3: "Resharing",
	4: "Finishing",
	5: "Other",
}

var StepType_value = map[string]int32{
	"Proposing": 0,
	"Accepting": 1,
	"Signing":   2,
	"Resharing": 3,
	"Finishing": 4,
	"Other":     5,
}

func (x StepType) String() string {
	return proto.EnumName(StepType_name, int32(x))
}

func (StepType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{0}
}

type Status int32

const (
	Status_Pending    Status = 0
	Status_Processing Status = 1
	Status_Success    Status = 2
	Status_Failed     Status = 3
)

var Status_name = map[int32]string{
	0: "Pending",
	1: "Processing",
	2: "Success",
	3: "Failed",
}

var Status_value = map[string]int32{
	"Pending":    0,
	"Processing": 1,
	"Success":    2,
	"Failed":     3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{1}
}

func init() {
	proto.RegisterEnum("StepType", StepType_name, StepType_value)
	proto.RegisterEnum("Status", Status_name, Status_value)
}

func init() { proto.RegisterFile("session.proto", fileDescriptor_3a6be1b361fa6f14) }

var fileDescriptor_3a6be1b361fa6f14 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xcf, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x06, 0xe0, 0xa4, 0xb5, 0xd1, 0x8e, 0x54, 0x42, 0x1e, 0x60, 0x1f, 0xa0, 0xd8, 0xe6, 0xe0,
	0x5d, 0xd0, 0x43, 0xae, 0x06, 0xe3, 0xc9, 0x83, 0xb0, 0xdd, 0x8e, 0xc9, 0x62, 0xdc, 0x5d, 0x76,
	0xa6, 0x42, 0xde, 0xc2, 0xc7, 0xf2, 0xd8, 0xa3, 0x47, 0x49, 0x5e, 0x44, 0xa6, 0x82, 0xc7, 0x8f,
	0x9f, 0xf9, 0x99, 0x1f, 0x56, 0x84, 0x44, 0xd6, 0xbb, 0x6d, 0x88, 0x9e, 0xfd, 0xfa, 0x05, 0x2e,
	0x1a, 0xc6, 0xf0, 0x34, 0x04, 0x2c, 0x56, 0xb0, 0xac, 0xa3, 0x0f, 0x9e, 0xac, 0x6b, 0xf3, 0x44,
	0x78, 0x67, 0x0c, 0x06, 0x16, 0xa6, 0xc5, 0x25, 0x9c, 0x37, 0xb6, 0x75, 0x82, 0x99, 0x64, 0x8f,
	0x48, 0x9d, 0x8e, 0xc2, 0xb9, 0xb0, 0xb2, 0xce, 0x52, 0x27, 0x3c, 0x2b, 0x96, 0xb0, 0x78, 0xe0,
	0x0e, 0x63, 0xbe, 0x58, 0xdf, 0x42, 0xd6, 0xb0, 0xe6, 0x03, 0xc9, 0x7d, 0x8d, 0x6e, 0xff, 0xd7,
	0x7d, 0x05, 0x50, 0x47, 0x6f, 0xe4, 0x95, 0xff, 0xf2, 0x83, 0x11, 0xe7, 0xb3, 0x02, 0x20, 0xab,
	0xb4, 0xed, 0x71, 0x9f, 0xcf, 0xef, 0xab, 0xaf, 0x51, 0xa5, 0xc7, 0x51, 0xa5, 0x3f, 0xa3, 0x4a,
	0x3f, 0x27, 0x95, 0x1c, 0x27, 0x95, 0x7c, 0x4f, 0x2a, 0x79, 0xbe, 0x6e, 0x2d, 0xf7, 0x7a, 0xb7,
	0x35, 0xfe, 0xbd, 0x8c, 0x3a, 0xda, 0xd7, 0x61, 0x73, 0x9a, 0x64, 0x7c, 0x5f, 0x32, 0xd1, 0x86,
	0x3e, 0x4c, 0x19, 0xde, 0xda, 0x92, 0x87, 0x80, 0xb4, 0xcb, 0x4e, 0xd9, 0xcd, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xf3, 0xef, 0xc8, 0x25, 0xff, 0x00, 0x00, 0x00,
}
